[gd_resource type="ShaderMaterial" load_steps=5 format=3 uid="uid://chc816oape0p4"]

[sub_resource type="Shader" id="Shader_oj4dl"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.beta3's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform float anisotropy_ratio : hint_range(0,256);
uniform sampler2D texture_flowmap : hint_anisotropy,filter_linear_mipmap,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=  UV*uv1_scale.xy+uv1_offset.xy;
}


void fragment() {
	vec2 base_uv = UV + (TIME * 0.002);
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	ALPHA *= albedo.a * albedo_tex.a;
	vec3 anisotropy_tex = texture(texture_flowmap,base_uv).rga;
	ANISOTROPY = anisotropy_ratio*anisotropy_tex.b;
	ANISOTROPY_FLOW = anisotropy_tex.rg*2.0-1.0;
}
"

[sub_resource type="Gradient" id="Gradient_nnwsy"]
colors = PackedColorArray(0, 0, 0.956863, 1, 1, 1, 1, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_8uln1"]
noise_type = 0
frequency = 0.02

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_lbo1k"]
seamless = true
as_normal_map = true
color_ramp = SubResource("Gradient_nnwsy")
noise = SubResource("FastNoiseLite_8uln1")

[resource]
render_priority = 0
shader = SubResource("Shader_oj4dl")
shader_parameter/albedo = Color(0.0784314, 0.694118, 1, 1)
shader_parameter/anisotropy_ratio = 0.0
shader_parameter/metallic = 0.0
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/normal_scale = 1.0
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/specular = 0.5
shader_parameter/texture_normal = SubResource("NoiseTexture2D_lbo1k")
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
